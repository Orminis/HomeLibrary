"""associations

Revision ID: 11f97d92b20f
Revises: f5e2da411971
Create Date: 2022-08-22 23:41:19.245104

"""
import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
from sqlalchemy.dialects import postgresql

revision = "11f97d92b20f"
down_revision = "f5e2da411971"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "authors",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("first_name", sa.String(length=35), nullable=False),
        sa.Column("last_name", sa.String(length=35), nullable=False),
        sa.Column("nationality", sa.String(length=50), nullable=False),
        sa.Column("reading_books_id", sa.Integer(), nullable=True),
        sa.Column("digital_books_id", sa.Integer(), nullable=True),
        sa.Column("audio_books_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["audio_books_id"],
            ["audio_books.id"],
        ),
        sa.ForeignKeyConstraint(
            ["digital_books_id"],
            ["digital_books.id"],
        ),
        sa.ForeignKeyConstraint(
            ["reading_books_id"],
            ["reading_books.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "users_audio_books_associations",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=True),
        sa.Column("audio_book_id", sa.Integer(), nullable=True),
        sa.Column("user_comments", sa.Text(), nullable=False),
        sa.Column("user_rating", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["audio_book_id"],
            ["audio_books.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["standard_user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "users_digital_books_associations",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=True),
        sa.Column("digital_book_id", sa.Integer(), nullable=True),
        sa.Column("user_comments", sa.Text(), nullable=False),
        sa.Column("user_rating", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["digital_book_id"],
            ["digital_books.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["standard_user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.add_column(
        "audio_books", sa.Column("title", sa.String(length=255), nullable=False)
    )
    op.add_column("audio_books", sa.Column("author_id", sa.Integer(), nullable=True))
    op.create_foreign_key(None, "audio_books", "authors", ["author_id"], ["id"])
    op.drop_column("audio_books", "name")
    op.drop_column("audio_books", "author_last_name")
    op.drop_column("audio_books", "author_first_name")
    op.add_column(
        "audio_books_for_approval",
        sa.Column("title", sa.String(length=255), nullable=False),
    )
    op.drop_column("audio_books_for_approval", "name")
    op.drop_column("audio_books_for_approval", "author_last_name")
    op.drop_column("audio_books_for_approval", "author_first_name")
    op.add_column(
        "digital_books", sa.Column("title", sa.String(length=255), nullable=False)
    )
    op.add_column("digital_books", sa.Column("author_id", sa.Integer(), nullable=True))
    op.create_foreign_key(None, "digital_books", "authors", ["author_id"], ["id"])
    op.drop_column("digital_books", "name")
    op.drop_column("digital_books", "author_last_name")
    op.drop_column("digital_books", "author_first_name")
    op.add_column(
        "digital_books_for_approval",
        sa.Column("title", sa.String(length=255), nullable=False),
    )
    op.drop_column("digital_books_for_approval", "name")
    op.drop_column("digital_books_for_approval", "author_last_name")
    op.drop_column("digital_books_for_approval", "author_first_name")
    op.add_column(
        "reading_books", sa.Column("title", sa.String(length=255), nullable=False)
    )
    op.add_column("reading_books", sa.Column("author_id", sa.Integer(), nullable=True))
    op.create_foreign_key(None, "reading_books", "authors", ["author_id"], ["id"])
    op.drop_column("reading_books", "name")
    op.drop_column("reading_books", "author_last_name")
    op.drop_column("reading_books", "author_first_name")
    op.add_column(
        "reading_books_for_approval",
        sa.Column("title", sa.String(length=255), nullable=False),
    )
    op.drop_column("reading_books_for_approval", "name")
    op.drop_column("reading_books_for_approval", "author_last_name")
    op.drop_column("reading_books_for_approval", "author_first_name")
    op.add_column(
        "users_reading_books_associations",
        sa.Column("user_rating", sa.Integer(), nullable=False),
    )
    # https://stackoverflow.com/questions/37848815/sqlalchemy-postgresql-enum-does-not-create-type-on-db-migrate
    # next 2 rows were added manually. check the link above
    user_condition = postgresql.ENUM(
        "mint", "fine", "very_good", "good", "fair", "poor", name="user_condition"
    )
    user_condition.create(op.get_bind())
    op.add_column(
        "users_reading_books_associations",
        sa.Column(
            "user_condition",
            sa.Enum(
                "mint",
                "fine",
                "very_good",
                "good",
                "fair",
                "poor",
                name="user_condition",
            ),
            nullable=False,
        ),
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column("users_reading_books_associations", "user_condition")
    user_condition = postgresql.ENUM(
        "mint", "fine", "very_good", "good", "fair", "poor", name="user_condition"
    )
    user_condition.drop(op.get_bind())
    op.drop_column("users_reading_books_associations", "user_rating")
    op.add_column(
        "reading_books_for_approval",
        sa.Column(
            "author_first_name",
            sa.VARCHAR(length=35),
            autoincrement=False,
            nullable=False,
        ),
    )
    op.add_column(
        "reading_books_for_approval",
        sa.Column(
            "author_last_name",
            sa.VARCHAR(length=35),
            autoincrement=False,
            nullable=False,
        ),
    )
    op.add_column(
        "reading_books_for_approval",
        sa.Column("name", sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    )
    op.drop_column("reading_books_for_approval", "title")
    op.add_column(
        "reading_books",
        sa.Column(
            "author_first_name",
            sa.VARCHAR(length=35),
            autoincrement=False,
            nullable=False,
        ),
    )
    op.add_column(
        "reading_books",
        sa.Column(
            "author_last_name",
            sa.VARCHAR(length=35),
            autoincrement=False,
            nullable=False,
        ),
    )
    op.add_column(
        "reading_books",
        sa.Column("name", sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    )
    op.drop_constraint(None, "reading_books", type_="foreignkey")
    op.drop_column("reading_books", "author_id")
    op.drop_column("reading_books", "title")
    op.add_column(
        "digital_books_for_approval",
        sa.Column(
            "author_first_name",
            sa.VARCHAR(length=35),
            autoincrement=False,
            nullable=False,
        ),
    )
    op.add_column(
        "digital_books_for_approval",
        sa.Column(
            "author_last_name",
            sa.VARCHAR(length=35),
            autoincrement=False,
            nullable=False,
        ),
    )
    op.add_column(
        "digital_books_for_approval",
        sa.Column("name", sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    )
    op.drop_column("digital_books_for_approval", "title")
    op.add_column(
        "digital_books",
        sa.Column(
            "author_first_name",
            sa.VARCHAR(length=35),
            autoincrement=False,
            nullable=False,
        ),
    )
    op.add_column(
        "digital_books",
        sa.Column(
            "author_last_name",
            sa.VARCHAR(length=35),
            autoincrement=False,
            nullable=False,
        ),
    )
    op.add_column(
        "digital_books",
        sa.Column("name", sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    )
    op.drop_constraint(None, "digital_books", type_="foreignkey")
    op.drop_column("digital_books", "author_id")
    op.drop_column("digital_books", "title")
    op.add_column(
        "audio_books_for_approval",
        sa.Column(
            "author_first_name",
            sa.VARCHAR(length=35),
            autoincrement=False,
            nullable=False,
        ),
    )
    op.add_column(
        "audio_books_for_approval",
        sa.Column(
            "author_last_name",
            sa.VARCHAR(length=35),
            autoincrement=False,
            nullable=False,
        ),
    )
    op.add_column(
        "audio_books_for_approval",
        sa.Column("name", sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    )
    op.drop_column("audio_books_for_approval", "title")
    op.add_column(
        "audio_books",
        sa.Column(
            "author_first_name",
            sa.VARCHAR(length=35),
            autoincrement=False,
            nullable=False,
        ),
    )
    op.add_column(
        "audio_books",
        sa.Column(
            "author_last_name",
            sa.VARCHAR(length=35),
            autoincrement=False,
            nullable=False,
        ),
    )
    op.add_column(
        "audio_books",
        sa.Column("name", sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    )
    op.drop_constraint(None, "audio_books", type_="foreignkey")
    op.drop_column("audio_books", "author_id")
    op.drop_column("audio_books", "title")
    op.drop_table("users_digital_books_associations")
    op.drop_table("users_audio_books_associations")
    op.drop_table("authors")
    # ### end Alembic commands ###
